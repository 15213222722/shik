<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shik.dao.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.shik.dao.model.Blog">
    <id column="blogId" jdbcType="VARCHAR" property="blogid" />
    <result column="createTime" jdbcType="BIGINT" property="createtime" />
    <result column="deleteBoolean" jdbcType="BIT" property="deleteboolean" />
    <result column="groupId" jdbcType="VARCHAR" property="groupid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.shik.dao.model.Blog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    blogId, createTime, deleteBoolean, groupId, title
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.shik.dao.model.BlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.shik.dao.model.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where blogId = #{blogid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from blog
    where blogId = #{blogid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.shik.dao.model.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shik.dao.model.Blog">
    insert into blog (blogId, createTime, deleteBoolean, 
      groupId, title, content
      )
    values (#{blogid,jdbcType=VARCHAR}, #{createtime,jdbcType=BIGINT}, #{deleteboolean,jdbcType=BIT}, 
      #{groupid,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shik.dao.model.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogid != null">
        blogId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="deleteboolean != null">
        deleteBoolean,
      </if>
      <if test="groupid != null">
        groupId,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogid != null">
        #{blogid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="deleteboolean != null">
        #{deleteboolean,jdbcType=BIT},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shik.dao.model.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.blogid != null">
        blogId = #{record.blogid,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteboolean != null">
        deleteBoolean = #{record.deleteboolean,jdbcType=BIT},
      </if>
      <if test="record.groupid != null">
        groupId = #{record.groupid,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog
    set blogId = #{record.blogid,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=BIGINT},
      deleteBoolean = #{record.deleteboolean,jdbcType=BIT},
      groupId = #{record.groupid,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set blogId = #{record.blogid,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=BIGINT},
      deleteBoolean = #{record.deleteboolean,jdbcType=BIT},
      groupId = #{record.groupid,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shik.dao.model.Blog">
    update blog
    <set>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="deleteboolean != null">
        deleteBoolean = #{deleteboolean,jdbcType=BIT},
      </if>
      <if test="groupid != null">
        groupId = #{groupid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blogId = #{blogid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.shik.dao.model.Blog">
    update blog
    set createTime = #{createtime,jdbcType=BIGINT},
      deleteBoolean = #{deleteboolean,jdbcType=BIT},
      groupId = #{groupid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where blogId = #{blogid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shik.dao.model.Blog">
    update blog
    set createTime = #{createtime,jdbcType=BIGINT},
      deleteBoolean = #{deleteboolean,jdbcType=BIT},
      groupId = #{groupid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR}
    where blogId = #{blogid,jdbcType=VARCHAR}
  </update>
  <cache eviction="LRU" flushInterval="60000" readOnly="true" size="1024" />
</mapper>